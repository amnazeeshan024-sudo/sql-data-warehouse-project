           ----CRM FILES-------
           
           --TRANSFORMATION OF CUST INFO TABLE
INSERT INTO silver.crm_cust_info (
    cst_id  ,
    cst_key ,
    cst_firstname ,
    cst_lastname,
    cst_marital_status,
    cst_gndr ,
    cst_create_date 
    
)

SELECT
 cst_id ,
    cst_key ,
   TRIM(cst_firstname) AS cst_firstname ,
   TRIM (cst_lastname) AS cst_lastname,

  CASE
   WHEN UPPER(TRIM(cst_marital_status)) = 'S' THEN 'Single'
   WHEN UPPER(TRIM (cst_marital_status)) = 'M' THEN 'Married'
  ELSE 'n/a'
  END  cst_marital_status,  --Normalize marital status values to readable format
 
 CASE
  WHEN UPPER(TRIM (cst_gndr)) = 'F' THEN 'Female'
  WHEN UPPER(TRIM (cst_gndr)) = 'M' THEN 'Male'
  ELSE 'n/a'
  END  cst_gndr,       --Normalize gender values to readable format   
    cst_create_date  
FROM(
   SELECT 
    *,
    ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC) AS flag_last
FROM bronze.crm_cust_info
WHERE cst_id IS NOT NULL --remove data duplicates
)t 
WHERE flag_last = 1; --Select the most recent record per customer



------Transformation of prd info table----------
INSERT INTO silver.crm_prd_info(
 prd_id ,
    cat_id  ,
    prd_key ,
    prd_nm ,
    prd_cost ,
    prd_line,
    prd_start_dt ,
    prd_end_dt)
SELECT
   prd_id, 
  REPLACE (SUBSTRING(prd_key,1,5),'-','_') AS cat_id, --EXTRA CATAGORY ID
  SUBSTRING(prd_key,7,LEN(prd_key)) AS prd_key,---EXTRA PRD KEY
    prd_nm,
  ISNULL(prd_cost ,0) AS prd_cost,
 CASE UPPER(TRIM(prd_line ))  
   WHEN  'M' THEN 'Mountain'
   WHEN 'R' THEN 'Road'
   WHEN 'S' THEN 'Other Sales'
   WHEN  'T' THEN 'Touring'
   ELSE 'n/a'
 END AS  prd_line, --MAP PRODUCT LINE CODES TO DESCRIPTIVE VALUES
  
  CAST(prd_start_dt AS DATE) AS prd_start_dt,
  CAST(
  LEAD(prd_start_dt ) OVER (PARTITION BY  prd_key ORDER BY prd_start_dt)-1 
  AS DATE
  ) AS  prd_end_dt  --calculate end date as one day before the next start date
    FROM bronze.crm_prd_info
   -- WHERE  SUBSTRING(prd_key,7,LEN(prd_key))  IN (
    --SELECT sls_prd_key FROM bronze.crm_sales_details )
   -- WHERE   REPLACE (SUBSTRING(prd_key,1,5),'-','_')  NOT IN 
    --(SELECT DISTINCT id FROM bronze.erp_px_cat_g1v2) --MATCHING TWO TABLES
   
   
   
   
   -------transformation of sales details-----
   INSERT INTO silver.crm_sales_details(
   sls_ord_num ,
    sls_prd_key,
    sls_cust_id ,
    sls_order_dt,
    sls_ship_dt,
    sls_due_dt,
    sls_sales ,
    sls_quantity ,
    sls_price 
    )
 SELECT 
     sls_ord_num ,
    sls_prd_key ,
    sls_cust_id,
    CASE 
    WHEN sls_order_dt = 0 OR LEN(sls_order_dt) != 8 THEN NULL
    ELSE CAST(CAST(sls_order_dt AS VARCHAR) AS DATE)
    END AS sls_order_dt,
 
     CASE 
     WHEN sls_ship_dt = 0 OR LEN(sls_ship_dt) != 8 THEN NULL
    ELSE CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE)
    END AS sls_ship_dt,
    
     CASE WHEN sls_due_dt = 0 OR LEN(sls_due_dt) != 8 THEN NULL
    ELSE CAST(CAST(sls_due_dt AS VARCHAR) AS DATE)
    END AS sls_due_dt,
    
   
   CASE
   WHEN sls_sales IS NULL OR sls_sales <= 0 OR sls_sales != sls_quantity * ABS(sls_price )
    THEN sls_quantity * ABS(sls_price )
    ELSE sls_sales
    END AS sls_sales,--Recalculate sales if orignal values is missing or incorrect
    sls_quantity,
  CASE
  WHEN  sls_price IS NULL OR  sls_price <= 0
  THEN sls_sales/ NULLIF(sls_quantity,0)
    ELSE  sls_price
    END AS  sls_price --Derive price if orignal value is invalid
FROM bronze.crm_sales_details 

----------------------------ERP FILES TRANSFORMATION---------------------------
--transformation of erp cust ------
INSERT INTO  silver.erp_cust_az12  (
 cid ,
    bdate,
    gen )
 SELECT 

     CASE WHEN cid LIKE 'NAS%' THEN SUBSTRING (cid,4,LEN(cid)) --remove nas prefix if present
     ELSE cid
    END AS cid,--remove nas from cid colm-----
    CASE WHEN bdate >  GETDATE() THEN NULL
    ELSE bdate
    END AS bdate,---set future bdates to null
    CASE WHEN UPPER(TRIM(gen)) IN ('F' ,'Female') then 'Female'
    WHEN UPPER(TRIM(gen)) IN ('M' ,'Male') then 'Male'
    ELSE 'n/a'
    END AS gen -- normalize gender values and handle unknown cases
   FROM bronze.erp_cust_az12  
  
-- WHERE   CASE WHEN cid LIKE 'NAS%' THEN SUBSTRING (cid,4,LEN(cid))
  --   ELSE cid
    -- END NOT IN (SELECT DISTINCT cst_key FROM silver.crm_cust_info)

     ---------transformation of erp loc a101-------
    INSERT INTO silver.erp_loc_a101 (
    cid,
    cntry)
    SELECT 
     REPLACE (cid,'-','') cid,
     case when TRIM(cntry) = 'DE' THEN 'Germany'
     when TRIM(cntry) IN ('US' ,'USA') THEN 'United State'
     when TRIM(cntry) = '' OR cntry IS NULL THEN 'n/a'
     ELSE TRIM(cntry)
     END AS cntry --Normalize and handle missing or blank country codes

     FROM bronze.erp_loc_a101 -- WHERE   REPLACE (cid,'-','')  NOT IN
    -- (SELECT cst_key FROM silver.crm_cust_info)
    


    ------transformaton of erp px cat g1v2---
    INSERT INTO silver.erp_px_cat_g1v2
    (id,cat,subcat,maintenance)
     SELECT 
     id,
      cat ,
     subcat ,
       maintenance
      FROM bronze.erp_px_cat_g1v2
     
    
